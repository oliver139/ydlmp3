#!/usr/bin/env node
"use strict";var d=require("node:fs"),n=require("node:path"),o=require("node:process"),h=require("command-exists"),f=require("yargs"),g=require("yt-dlp-wrap");function v(e){try{const r=new URL(e);return r.protocol==="http:"||r.protocol==="https:"}catch{return!1}}function y(e){if(e)return e;let r="1.mp3";const u=o.cwd();try{const s=d.readdirSync(u).filter(t=>n.extname(t)===".mp3"&&!Number.isNaN(n.basename(t,".mp3")));s.length!==0&&(r=`${s.reduce((t,m)=>{const a=Number.parseInt(n.basename(m,".mp3"));return a>t?a:t},0)+1}.mp3`)}catch{console.error("Error: Could not list the directory."),o.exit(1)}return r}const i=[],b=["yt-dlp","ffmpeg","ffprobe"];b.forEach(e=>{h.sync(e)||i.push(`Error: ${e} is not available.`)});const l=f(o.argv.slice(2)).usage("Usage: ydlmp3 <start time> <end time> <url> [options]").options({output:{alias:"o",describe:"The name of the output file name"}}).strictOptions().check(e=>{if(i.length)throw new Error(i.join(`
`));if(e._.length!==3){const r=new Map([[0,"Missing parameter(s)"],[1,"Missing parameter <end time> and <url>"],[2,"Missing <url>"]]);throw new Error(r.get(e._.length)||"Extra parameter(s) given")}if(!v(`${e._[2]}`))throw new Error("Invalid url provided");return!0}).epilogue(`yt-dlp, ffmpeg and ffprobe are required.
Check out yt-dlp's github for more info: https://github.com/yt-dlp/yt-dlp`).help().alias("h","help").version().alias("v","version");l.getOptions().boolean.splice(-2);const p=l.argv,c=y(p.output);c===void 0&&(console.error("Error: Fail to get a file name automatically"),o.exit(1));const[w,E,x]=p._,q=new g.default;q.exec(["-x","--audio-format","mp3","--postprocessor-args",`-ss ${w} -to ${E}`,"-o",c,x]).on("progress",e=>console.log(e.percent,e.totalSize,e.currentSpeed,e.eta)).on("ytDlpEvent",(e,r)=>console.log(e,r));
